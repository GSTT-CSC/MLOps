version: '3.3'

services:
#    nginx:
#        restart: always
#        build: ./nginx
#        image: mlflow_nginx
#        container_name: mlflow_nginx
#        ports:
#            - "85:85"
#            - "8002:8002"
#        networks:
#            - frontend
#            - backend
#        depends_on:
#            - web

    minio:
        restart: always
        image: minio/minio:RELEASE.2021-03-17T02-33-02Z
        container_name: mlflow_s3
        ports:
            - "8002:8002"
        command: server /data --address ':9002'
        networks:
            - frontend
            - backend
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data

#    db:
#        restart: always
#        image: mysql/mysql-server:5.7.28
#        container_name: mlflow_db
#        expose:
#            - "3306"
#        networks:
#            - backend
#        environment:
#            - MYSQL_DATABASE=${MYSQL_DATABASE}
#            - MYSQL_USER=${MYSQL_USER}
#            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#        volumes:
#            - ./data/dbdata:/var/lib/mysql

    db:
        image: postgres:13.1
        networks:
            - backend
        environment:
            POSTGRES_DB: mlflowdb
            POSTGRES_USER: mlflow
            POSTGRES_PASSWORD: password
        restart: always
        expose:
            - "5432"
        volumes:
            - dbdata_pg:/var/lib/postgresql/data

    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        depends_on:
            - "minio"
            - "db"
        networks:
            - frontend
            - backend
        expose:
            - "5000"
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9002
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
#        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root 's3://mlflow' --host 0.0.0.0
        command: mlflow server --backend-store-uri postgresql+psycopg2://mlflow:password@db:5432/mlflowdb --default-artifact-root 's3://mlflow' --host 0.0.0.0

volumes:
    dbdata_pg:
    minio_data:

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

# Useful sources:
#   https://towardsdatascience.com/deploy-mlflow-with-docker-compose-8059f16b6039
#   https://medium.com/noodle-labs-the-future-of-ai/introduction-to-mlflow-for-mlops-part-3-database-tracking-minio-artifact-storage-and-registry-9fef196aaf42
