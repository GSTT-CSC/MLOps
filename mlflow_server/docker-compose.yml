version: '3.7'

services:
    minio:
        restart: always
        image: minio/minio:RELEASE.2021-10-13T00-23-17Z
        container_name: mlflow_s3
        ports:
            - "8002:8002"
            - "9001:9001"
        command: server /data --console-address ':9001' --address ':8002'
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - ./minio_data:/data

    mc:
        image: minio/mc:RELEASE.2021-10-07T04-19-58Z
        depends_on:
            - minio
        container_name: mc
        entrypoint: >
            /bin/sh -c "
            /tmp/wait-for-it.sh minio:8002;
            /usr/bin/mc alias set minio http://minio:8002 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
            /usr/bin/mc mb minio/mlflow;
            exit 0;
            "
        volumes:
            - ./wait-for-it.sh:/tmp/wait-for-it.sh

    db:
        restart: always
        image: mysql/mysql-server:5.7.28
        container_name: mlflow_db
        ports:
            - "3306:3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./dbdata:/var/lib/mysql

    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        ports:
            - "5000:5000"
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:8002
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0


#version: '3.7'
#
## things to try to get this to work
## - remove frontend/backend networks
## - work out how to use the minio MINIO_BROWSER_REDIRECT_URL env var
## - forward 8002 to 9002 and fwd 9001 to 9001 in nginx
## swl backend artifact store
#
#services:
#    nginx:
#        restart: always
#        build: ./nginx
#        image: mlflow_nginx
#        container_name: mlflow_nginx
#        ports:
#            - "85:85"
#            - "8002:8002"
#            - "3306:3306"
##        networks:
##            - frontend
##            - backend
#        depends_on:
#            - web
#
#    minio:
#        restart: always
#        image: minio/minio:RELEASE.2021-03-17T02-33-02Z
#        container_name: mlflow_s3
#        expose:
#            - "9002"
#            - "9001"
#        command: server /data --address ':9002'
#        environment:
#            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
#            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
#        volumes:
#            - ./minio_data:/data
#
#    db:
#        restart: always
#        image: mysql/mysql-server:5.7.28
#        container_name: mlflow_db
#        expose:
#            - "3306"
#        environment:
#            - MYSQL_DATABASE=${MYSQL_DATABASE}
#            - MYSQL_USER=${MYSQL_USER}
#            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#        volumes:
#            - ./dbdata:/var/lib/mysql
#
#    web:
#        restart: always
#        build: ./mlflow
#        image: mlflow_server
#        container_name: mlflow_server
#        expose:
#            - "5000"
#        environment:
#            - MLFLOW_S3_ENDPOINT_URL=http://minio:9002
#            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --host 0.0.0.0

#
#networks:
#    frontend:
#        driver: bridge
#    backend:
#        driver: bridge

# Useful sources:
#   https://towardsdatascience.com/deploy-mlflow-with-docker-compose-8059f16b6039
#   https://medium.com/noodle-labs-the-future-of-ai/introduction-to-mlflow-for-mlops-part-3-database-tracking-minio-artifact-storage-and-registry-9fef196aaf42
