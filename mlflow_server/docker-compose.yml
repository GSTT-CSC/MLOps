version: '3.7'

services:
    db:
        restart: always
        image: mysql/mysql-server:5.7.28
        container_name: mlflow_db
        networks:
            - backend
        expose:
            - "3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./dbdata:/var/lib/mysql

    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        networks:
            - backend
            - frontend
        expose:
            - "5000"
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9002
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0

    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        ports:
            - "85:85"
            - "8002:8002"
        networks:
            - frontend
        depends_on:
            - web

#    minio:
#        restart: always
#        image: minio/minio:RELEASE.2021-10-13T00-23-17Z
#        container_name: mlflow_s3
#        networks:
#            - frontend
#        expose:
#            - "9001"
#            - "9002"
#        command: server /data --address ':9000' --console-address '9001'
#        environment:
#            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
#            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
#        volumes:
#            - ./minio_data:/data
    minio:
#        image: minio/minio:RELEASE.2021-03-17T02-33-02Z
        image: minio/minio:RELEASE.2021-10-23T03-28-24Z.hotfix.bd4ddccd2
        volumes:
            - ./data_minio:/data
        networks:
            - frontend
            - backend
        expose:
            - "9002"
            - "9001"
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        command: server /data --address ':9002' --console-address ':9001'
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9002/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3

    mc:
        image: minio/mc:RELEASE.2021-10-07T04-19-58Z
        depends_on:
            - minio
        container_name: mc
        networks:
            - backend
        entrypoint: >
            /bin/sh -c "
            /tmp/wait-for-it.sh minio:9002;
            /usr/bin/mc alias set minio http://minio:9002 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
            /usr/bin/mc mb minio/mlflow;
            exit 0;
            "
        volumes:
            - ./wait-for-it.sh:/tmp/wait-for-it.sh

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    dbdata:
    minio_data:

# Useful sources:
#   https://towardsdatascience.com/deploy-mlflow-with-docker-compose-8059f16b6039
#   https://medium.com/noodle-labs-the-future-of-ai/introduction-to-mlflow-for-mlops-part-3-database-tracking-minio-artifact-storage-and-registry-9fef196aaf42
